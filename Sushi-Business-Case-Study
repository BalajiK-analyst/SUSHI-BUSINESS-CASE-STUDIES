CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

create procedure getalltable
as
begin
select * from sales;
select * from menu;
select * from members;
end
---What is the total amount each customer spent at the restaurant?
select 
customer_id,
sum(price) as Total_spent
from sales s join
menu m 
on s.product_id = m.product_id
group by customer_id

---How many days has each customer visited the restaurant?
select customer_id ,
count(distinct order_date) as no_of_days_visited
from sales
group by customer_id

---What was the first item from the menu purchased by each customer?

with temp as
(select s.customer_id,m.product_id,m.product_name,s.order_date 
from sales s join menu m 
on s.product_id=m.product_id join 
members mm on s.customer_id=mm.customer_id)
select distinct customer_id,
FIRST_VALUE(product_name) over(partition by customer_id order by order_date) as first_purc
from 
temp

--What is the most purchased item on the menu and how many times was it purchased by all customers?

select top 1
m.product_name,
count(s.product_id) as no_times_purchased
from sales s
join menu m 
on s.product_id=m.product_id 
group by m.product_name
order by 2 desc

---Which item was the most popular for each customer?
with cte as
(select 
	s.customer_id,
	m.product_name,
	count(s.product_id) as no_times_purchased
from sales s
join menu m 
on s.product_id=m.product_id 
group by s.customer_id,m.product_name),
 cte2 as (
select customer_id,product_name,
rank() over(partition by customer_id order by no_times_purchased desc) as rn
from cte)
select customer_id,product_name
from cte2
where rn = 1

--Which item was purchased first by the customer after they became a member?
with cte as
(select s.customer_id,m.product_name,mm.join_date
from sales s left join menu m 
on s.product_id=m.product_id join 
members mm on s.customer_id=mm.customer_id
where s.order_date > mm.join_date)

select distinct customer_id,
FIRST_VALUE(product_name) over(partition by customer_id order by join_date asc) as first_purchase_after_membership
from cte
---Which item was purchased just before the customer became a member?
with cte as
(select mm.customer_id,s.order_date,m.product_name from 
members mm left join sales s
on mm.customer_id = s.customer_id 
and s.order_date < mm.join_date
join menu m on m.product_id=s.product_id)
select distinct customer_id,FIRST_VALUE(product_name) over(partition by customer_id order by order_date asc) as purchase_before_member
from cte

---What is the total items and amount spent for each member before they became a member?

select mm.customer_id,count(s.product_id) as cnt_product_before_member,sum(m.price) as total_spent from 
members mm left join sales s
on mm.customer_id = s.customer_id 
and s.order_date < mm.join_date
join menu m on s.product_id = m.product_id
group by mm.customer_id

---If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
with cte as
(select s.customer_id,s.product_id,m.product_name,m.price from sales s
join menu m on s.product_id=m.product_id),
cte2 as(
select customer_id,product_name,
price/10 as n_point
from 
cte)
select customer_id,sum(case when product_name<>'sushi' then n_point else n_point*2 end) as customer_point
from cte2
group by customer_id;

---In the first week after a customer joins the program (including their join date) they earn 2x points on all items,
---not just sushi - how many points do customer A and B have at the end of January?
with cte as(
select s.customer_id,product_name,price,order_date,s.product_id,join_date
from members mm
join sales s on 
s.customer_id=mm.customer_id
join menu m on 
s.product_id=m.product_id
where order_date>=join_date)
select distinct customer_id,
sum(case when DATEDIFF(day,join_date,order_date) <= 7 then 2 else 0 end) as total_points_jan 
from
cte
where order_date between '2021-01-01' and '2021-01-31'
group by customer_id

-------------END OF SUSHI BUSINESS CASE STUDIES-------------------------------------------------------------------------------------------------
